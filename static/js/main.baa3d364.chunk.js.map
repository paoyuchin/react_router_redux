{"version":3,"sources":["components/Header.js","store/actions/action.js","components/Item.js","components/Home.js","components/AddItem.js","components/EditItem.js","components/Query.js","components/Page.js","components/App.js","serviceWorker.js","store/reducer/toDoListReducer.js","store/reducer/rootReducer.js","index.js"],"names":["Header","Nav","NavItem","className","to","Component","DELETE_ITEM","ADD_ITEM","MODIFIED_ITEM","Item","handleDeleteItem","props","deleteItem","_item","Fragment","ListGroup","flush","ListGroupItem","this","name","Button","outline","color","tag","Link","id","onClick","connect","state","itemInfo","toDoList","dispatch","type","deleteItemAction","Home","handleChange","e","setState","queryContent","target","value","items","list","map","item","key","AddItem","handleAddTodo","addItem","history","preventDefault","todoContent","push","Form","onSubmit","FormGroup","Input","placeholder","onChange","toDoContent","addItemAction","EditItem","handleEditItem","modifiedItem","editedContent","match","params","Query","filter","includes","console","log","Page","exact","path","component","App","Boolean","window","location","hostname","initState","toDoReducer","action","length","newItem","index","parseInt","newRestItem","rootReducer","combineReducers","toDoListReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baa3d364.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route,Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Header extends Component {\n  render() {\n    return (\n        <Nav>\n          <NavItem>\n            <Link className=\"nav-link\" to=\"/\">\n              My Todo list\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link className=\"nav-link\" to=\"/add\">\n              Add Todo\n            </Link>\n          </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/query\">\n            Search To Do\n            </Link>\n        </NavItem>\n        </Nav>\n    );\n  }\n}\n\nexport default Header;\n","export const DELETE_ITEM = 'DELETE_ITEM';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const MODIFIED_ITEM = 'MODIFIED_ITEM';\n\n\nexport function addItemAction(toDoContent) {\n  return {\n    type: ADD_ITEM,\n    toDoContent\n  }\n};\n\n\nexport function modifiedItem(modifiedItem) {\n  return {\n    type: MODIFIED_ITEM,\n    modifiedItem\n  }\n};\n\n\nexport function deleteItemAction(deleteItem) {\n  return {\n    type: DELETE_ITEM,\n    deleteItem\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { deleteItemAction } from \"../store/actions/action\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  to\n} from \"reactstrap\";\nimport \"../scss/App.scss\";\n\nclass Item extends Component {\n  handleDeleteItem = () => {\n    this.props.deleteItem(this.props._item);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <ListGroup flush>\n          <ListGroupItem>\n            <span className=\"name three-child\">{this.props._item.name}</span>\n            <div className=\"btnsWrap\">\n              <Button\n                outline\n                color=\"primary\"\n                // size=\"sm\"\n                tag={Link}\n                to={`/edit_item/${this.props._item.id}`}\n              >\n                edit\n              </Button>\n              <Button className=\"margin_left_medium\" onClick={this.handleDeleteItem}>delete</Button>\n            </div>\n          </ListGroupItem>\n        </ListGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemInfo: state.toDoList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteItem: deleteItem => {\n      dispatch(deleteItemAction(deleteItem));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Item);\n","import React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"reactstrap\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryContent: \"\"\n    };\n  }\n    handleChange = e => {\n      this.setState({\n        queryContent: e.target.value\n      });\n    };\n  render() {\n    const { toDoList } = this.props;\n    const { queryContent } = this.state;\n    let items = toDoList.list\n      // .filter(\n      //   item =>\n      //     queryContent === \"\" ||\n      //     (queryContent && item.nsame.includes(queryContent))\n      // )\n      .map(item => {\n        return <Item key={item.id} _item={item} />;\n      });\n\n    return (\n      <React.Fragment>\n        <div className=\"item-container\">{items}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    toDoList: state.toDoList\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Home);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addItemAction } from \"../store/actions/action\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport \"../scss/App.scss\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\n\nclass AddItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoContent: \"\"\n    };\n  }\n\n  handleAddTodo = e => {\n    const { addItem, history } = this.props;\n    e.preventDefault();\n    addItem(this.state.todoContent);\n    history.push(\"/\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      todoContent: e.target.value\n    });\n  };\n  render() {\n    return (\n      <div className=\"form-container\">\n        <Form onSubmit={this.handleAddTodo}>\n          <FormGroup>\n            <Input\n              placeholder=\"add your to do!!\"\n              onChange={this.handleChange}\n            />\n            <Button\n              type=\"submit\"\n              color=\"success\"\n              className=\"margin_left_medium\"\n            >\n              add\n            </Button>\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: toDoContent => {\n      dispatch(addItemAction(toDoContent));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddItem);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { modifiedItem } from '../store/actions/action';\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\n\n\nclass EditItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editedContent: \"\",\n    };\n  }\n  handleEditItem = e => {\n    const {modifiedItem, history} = this.props;\n    const {editedContent} = this.state;\n    e.preventDefault();\n    modifiedItem(this.state.editedContent);\n    history.push(\"/\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      editedContent: {\n        name: e.target.value,\n        id: this.props.match.params.id\n      }\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleEditItem}>\n          <FormGroup>\n            <Input\n              placeholder=\"write your edit to do here\"\n              onChange={this.handleChange}\n            />\n            <Button\n              type=\"submit\"\n              color=\"warning\"\n              className=\"margin_left_medium\"\n            >\n              edit\n            </Button>\n          </FormGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    modifiedItem: editedContent => {\n      dispatch(modifiedItem(editedContent));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(EditItem);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addItemAction } from \"../store/actions/action\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport \"../scss/App.scss\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport Item from \"./Item\";\n\n\nclass Query extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoContent: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      queryContent: e.target.value\n    });\n  };\n  render() {\n    const { toDoList } = this.props;\n    const { queryContent } = this.state;\n    let items = toDoList.list\n      .filter(\n        item =>\n          // queryContent === \"\" ||\n          (queryContent && item.name.includes(queryContent))\n      )\n      .map(item => {\n        return <Item key={item.id} _item={item} />;\n      });\n    console.log('items',items)\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleEditItem}>\n          <FormGroup>\n            <Input\n              placeholder=\"search your todos!!\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        </Form>\n        <div className=\"item-container\">{items}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  };\n};\n\n\nconst mapStateToProps = state => {\n  console.log('query', state)\n  return {\n    toDoList: state.toDoList\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Query);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport AddItem from \"./AddItem\";\nimport EditItem from \"./EditItem\";\nimport Query from './Query';\n\n\nconst Page = () => {\n  return (\n    <div>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/add\" component={AddItem} />\n      <Route path=\"/edit_item/:id\" component={EditItem} />\n      <Route path=\"/query/\" component={Query} />      \n    </div>\n  );\n};\n\nexport default Page;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Page from \"./Page\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport '../scss/App.scss';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header className=\"header\" />\n        <Page className=\"main\" />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_ITEM,\n  MODIFIED_ITEM,\n  DELETE_ITEM\n} from '../actions/action'\n\nconst initState = {\n  list: [{\n    name: 'write home work',\n    id: 0\n  }, {\n    name: 'doing exercise',\n    id: 1\n  }, {\n    name: 'go to grocery: drink, vegetable',\n    id: 2\n  }]\n}\n\nconst toDoReducer = (state = initState, action) => {\n  console.log('reducer', action)\n  switch (action.type) {\n    case ADD_ITEM:\n      return {\n        ...state,\n        list: [...state.list, {\n          name: action.toDoContent,\n          id: state.list.length\n        }]\n      }\n    case MODIFIED_ITEM:\n      let newItem = state.list.map((item, index) => {\n        if (parseInt(action.modifiedItem.id, 10) === item.id) {\n          item.name = action.modifiedItem.name\n        }\n        return item\n      });\n      return {\n        ...state,\n        list: [...newItem]\n      }\n    case DELETE_ITEM:\n      const newRestItem = state.list.filter(item => {\n        return action.deleteItem.id !== item.id;\n      });\n      return {\n        ...state,\n        list: [...newRestItem]\n      }\n    default:\n      return state\n  }\n}\n\nexport default toDoReducer;\n","import toDoListReducer from './toDoListReducer';\nimport {\n  combineReducers\n} from \"redux\";\n\nconst rootReducer = combineReducers({\n  toDoList: toDoListReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './scss/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../src/store/reducer/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}